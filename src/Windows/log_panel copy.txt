#include "../../include/log_panel.h"
#include "../../include/terminal.h"

static void scroll_log_window(WINDOW* win) {
    if (!win) return;
    wscrl(win, 1);
}

static void format_log_prefix_with_color(char* prefix, size_t size, Aviao* aviao, int* color) {
    if (!prefix || !color || size < 8) return;
    
    if (aviao && aviao->id > 0) {
        format_flight_id(prefix, size, aviao);
        *color = get_flight_color_pair(aviao);
    } else {
        snprintf(prefix, size, "[SYS]");
        *color = LOG_SYSTEM;
    }
}

void format_complete_log_line(char* buffer, size_t size, const char* timestamp, 
                             const char* prefix, const char* message, int max_msg_len) {
    if (!buffer || !timestamp || !prefix || !message || size < 1) return;
    
    snprintf(buffer, size, "%s %s  %.*s", timestamp, prefix, max_msg_len, message);
}

int calculate_max_log_message_length(WINDOW* win, int offset) {
    if (!win) return 0;
    return getmaxx(win) - offset;
}

int calculate_log_position(WINDOW* win) {
    if (!win) return 1;
    
    int max_y = getmaxy(win);
    int y = max_y - 2;
    if (y < 1) y = 1;
    return y;
}

static void draw_log_entry(WINDOW* win, SimulacaoAeroporto* sim, Aviao* aviao, const char* message, int cor) {
    if (!win || !message) return;
    
    int y = calculate_log_position(win);
    
    char timestamp[16];
    format_elapsed_time(timestamp, sizeof(timestamp), sim ? sim->tempo_inicio : 0);
    
    char prefix[10];
    int prefix_color;
    format_log_prefix_with_color(prefix, sizeof(prefix), aviao, &prefix_color);
    
    int max_msg_len = calculate_max_log_message_length(win, 20);
    
    char log_line[256];
    format_complete_log_line(log_line, sizeof(log_line), timestamp, prefix, message, max_msg_len);
    
    draw_window_text(win, y, 1, log_line, cor);
    wclrtoeol(win);
}

void manage_log_panel(SimulacaoAeroporto* sim, Aviao* aviao, const char* message, int cor, WINDOW* log_win) {
    if (!validate_window_params(log_win, message)) return;
    
    if (!is_window_usable(log_win)) return;
    
    scroll_log_window(log_win);
    draw_log_entry(log_win, sim, aviao, message, cor);
    
    box(log_win, 0, 0);
    draw_window_title(log_win, "LOG");
    finalize_window_display(log_win);
}